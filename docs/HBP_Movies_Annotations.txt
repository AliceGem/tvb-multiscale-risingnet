-------------------------
GENERIC INFO
-------------------------
Text starting with * should appear as written text over the movie, during the time-window indicated above.
The rest of the content in this file, is to be spoken.
If you find the english expressions not ideal, feel free to adjust, as long as the meaning is kept.
If text is too long, pls notify me, and I will try to shorten it.
Otherwise, the time-windows could be slightly adjusted, most of them are not very strict.

Movies can be found here:
https://drive.google.com/drive/folders/1azLcqIS2PoJG6rc5Ryi46OJOT8dUATHQ?usp=sharing


-------------------------
tvb-nest_usage_local.mov
-------------------------
00:00 -- 00:10
    This video-tutorial is demonstrating the usage of TVB and NEST simulators locally.
    We recommend you to download our docker image.
    You can find its sources on github, at URL https://github.com/the-virtual-brain/tvb-multiscale

00:11 -- 00:15
    You should clone locally this repository. This is what we already did for this video.

00:15 -- 00:30
    With the local copy, make sure that in the Docker file, the command to launch Jupyter Notebook is uncommented,
    and bind port 8888 from inside the container to a localhost port.
    Then launch docker, to run the container.

* Alternatively use Docker Hub and this command:
*  docker pull thevirtualbrain/tvb-nest
*  docker run -d -p 8888:8888 thevirtualbrain/tvb-nest /home/docker/env/neurosci/bin/jupyter notebook --ip 0.0.0.0 --no-browser —allow-root

00:32 -- 00:36
    You should be able to see in the container logs that Notebook is running.

00:37 -- 00:40
    In a browser on your machine, access localhost with the port 8888

00:41 -- 00:44
    Password is set to tvb42

* Password is 'tvb42'

00:45 -- 00:50
    Navigate to folder packages, then tvb-multiscale, tvb_nest, examples and notebooks.

00:51 -- 00:55
    Open the available notebook and work with it, as you would with regular Jupyter Notebooks

* This notebook will be opened: https://github.com/dionperd/tvb-multiscale/tree/master/tvb_nest/examples/notebooks

00:56 -- end
    The notebook demonstrates the usage of tvb-nest package, via a simulation in which Wong-Wang models, with an
    excitatory and an inhibitory population, are used for the TVB region nodes.
    Two region nodes are modelled in NEST as networks of spiking neural populations, an excitatory and inhibitory one,
    using the “gif_cond_exp” model.
    A realistic cortical TVB large-scale connectivity is used that can be found in tvb-data Github repo.

* More information in 'Ponce-Alvarez et al., 2014'
* Dataset available at https://github.com/the-virtual-brain/tvb-data/tree/master/tvb_data/berlinSubjects/QL_20120814



--------------------------------------------------
tvb-nest_usage_on_collabhbp_and_cscs.mov
--------------------------------------------------
00:00 -- 00:20
    This video-tutorial is demonstrating the usage of TVB and NEST simulators on HBP Collaboratory,
    with CSCS computers as backend processing hardware.
    We need to have a CSCS account for this example to work, plus we should prepare our CSCS home directory.
    We had just logged-in on CSCS shell: first on the front-end node ELA, then on DAINT cluster.

* ssh [user]@ela.cscs.ch
* ssh [user]@daint.cscs.ch
* More about CSCS: https://user.cscs.ch/tools/containers/

00:21 -- 00:30
    First, we need to make sure that the relevant command modules are loaded in our environment: daint-mc and shifter.

* ~/.bashrc
* module load daint-mc # or daint-gpu
* module load shifter-ng
* More about CSCS:
*   https://user.cscs.ch/tools/containers/
*   https://user.cscs.ch/tools/containers/advanced_shifter/

00:31 -- 00:45
    Shifter is an HPC correspondent to Docker client.
    We ensure that tvb-nest image is downloaded locally.
    If not found, we use shifter pull command to get it from Docker Hub.

* srun -C mc shifter pull thevirtualbrain/tvb-nest

00:46 -- 01:00
    Last step in preparing our CSCS home directory, is to have a shell file for launching tvb-nest simulations.
    One example for such a file can be found on tvb-nest Github page.

* https://github.com/the-virtual-brain/tvb-multiscale/blob/master/docker/cosimulate_tvb_nest.sh

01:00 -- 01:15
    Next, we move focus towards HBP Collaboratory GUI, which is used for actually launching simulation jobs,
    in the CSCS environment prepared above.
    We could also just continue to use SSH, but switching to Collab is recommended, for improving the user experience.

    First we should login with a valid HBP collab account.
    If you do not have an account on HBP collab, someone with a valid account needs to invite you on the platform.
    Unfortunately, this account is different than the CSCS account, and the two accounts need to be linked by the
    HBP infrastructure team. To achieve the linked accounts, we can write a request towards support@humanbrainproject.eu

* https://services.humanbrainproject.eu/oidc/login
* support@humanbrainproject.eu

01:17 -- 01:33
    After login, we  navigate to tab COLLABS, and search for “TVB NEST” entity.

* https://collab.humanbrainproject.eu/#/collab/58136/nav/396829

01:34 -- 01:52
    On the left-side, click on “Run a co-simulation TVB-NEST” and we will see a demo notebook for launching tvb-nest
    simulations on the CSCS servers, in the environment prepared above.
    Exactly this notebook will work for my user only. For another CSCS user, you should copy this notebook in your own
    collab space and change the username.

01:53 -- 02:09
    On this notebook, or on a copy of it, we use menu entry Cell and then "Run all", to launch the simulation job.

02:10 -- end
    We will inspect the cell bellow title “Result” and run that particular cell multiple times,
    until we see that the simulation job was completed successfully.
